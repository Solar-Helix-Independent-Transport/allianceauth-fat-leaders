# Generated by Django 4.2.16 on 2025-02-16 10:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('afat', '0021_alter_afatlink_fleet'),
        ('eveonline', '0017_alliance_and_corp_names_are_not_unique')
    ]

    operations = [
        migrations.CreateModel(
            name='FatBoardLeadersSetup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('message', models.CharField(max_length=500)),
                ('time_to_look_back', models.IntegerField(default=30)),
                ('alliance', models.ManyToManyField(blank=True, to='eveonline.eveallianceinfo')),
                ('types_in_ratio', models.ManyToManyField(blank=True, related_name='ratio_types', to='afat.fleettype')),
            ],
        ),
        migrations.CreateModel(
            name='LeaderBoardTypeThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(default=5, help_text='Order the field will be show in. Lowest First.')),
                ('header', models.CharField(help_text='Column header line one, show to the user.', max_length=250)),
                ('LeaderBoard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fatleaders.fatboardleaderssetup')),
                ('fatLinkType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='afat.fleettype')),
                ('header_line_two', models.CharField(blank=True, default='', help_text='Column header line two, show to the user.', max_length=250)),
            ],
            options={
                'verbose_name': 'AFAT Type Field',
                'verbose_name_plural': 'AFAT Type Fields',
            },
        ),
        migrations.AddField(
            model_name='fatboardleaderssetup',
            name='types_to_breakout',
            field=models.ManyToManyField(blank=True, through='fatleaders.LeaderBoardTypeThrough', to='afat.fleettype'),
        ),
    ]
